{"version":3,"file":"TastConfigView.js","sourceRoot":"","sources":["../../../src/views/TaskConfig/TastConfigView.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AACX,OAAO,EAGL,aAAa,EAQb,wBAAwB,EAEzB,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAA;AAE7D,OAAO,EAAE,aAAa,EAAC,iBAAiB,EAAC,cAAc,EAAE,MAAM,mCAAmC,CAAA;AAClG,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAGhD,MAAM,qBAAsB,SAAQ,WAAW;IAI7C,YAAY,KAAY,EAAC,MAAmB;QAC1C,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC;IACrB,CAAC;IAED,SAAS;QACP,IAAI,aAAa,GAAG,IAAI,aAAa,CAAC,iBAAiB,CAAC,QAAQ,CAAC;aAC9D,SAAS,CAAC,IAAI,cAAc,EAAE;aACxB,KAAK,CAAC,QAAQ,CAAC;aACf,UAAU,CAAC,QAAQ,CAAC;aACpB,gBAAgB,CAAC;YACd,IAAI,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;aACR,SAAS,CAAC,IAAI,cAAc,EAAE;aACxB,KAAK,CAAC,KAAK,CAAC;aACZ,aAAa,CAAC,SAAS,CAAC;aACxB,UAAU,CAAC,KAAK,CAAC;aACjB,gBAAgB,CAAC;YAChB,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAC,UAAU,CAAC,CAAC;YAC1C,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC,CAAC,CAAA;QACT,IAAI,kBAAkB,GAAG,wBAAwB,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC;QAC3E,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK;QACH,KAAK,CAAC,IAAI,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAE,IAAI,aAAa,EAAE,CAAC;QACpC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,UAAU,CAAC,OAA0B;QACnC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CAEF","sourcesContent":["'use babel'\nimport {\n  createText,\n  createElement,\n  insertElement,\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  attachEventFromObject,\n  createTextEditor,\n  createSelect,\n  createModalActionButtons,\n  createOption\n} from '../../element/index';\nimport { UIModalView } from '../../ui-components/UIModalView'\nimport { UIComponent, UIBaseComponent } from '../../ui-components/UIComponent'\nimport { UIButtonGroup,UIButtonGroupMode,UIButtonConfig } from '../../ui-components/UIButtonGroup'\nimport { TaskViewPanel } from './TaskViewPanel';\nimport { EventEmitter }  from 'events';\nimport { CordovaProjectInfo } from '../../cordova/Cordova';\nexport class TaskConfigView extends UIModalView {\n  taskPanel:TaskViewPanel;\n  events:EventEmitter;\n\n  constructor(title:string,events:EventEmitter){\n    super(title);\n    this.events=events;\n  }\n\n  addFooter(){\n    let actionButtons = new UIButtonGroup(UIButtonGroupMode.Standard)\n      .addButton(new UIButtonConfig()\n            .setId('cancel')\n            .setCaption('Cancel')\n            .setClickListener(()=>{\n                this.close();\n            }))\n      .addButton(new UIButtonConfig()\n            .setId('run')\n            .setButtonType('success')\n            .setCaption('Run')\n            .setClickListener(()=>{\n              let taskConfig = this.taskPanel.getConfiguration();\n              this.events.emit(\"didRunTask\",taskConfig);\n              this.close();\n            }))\n      let modalActionButtons = createModalActionButtons(actionButtons.element());\n      insertElement(this.modalContainer, modalActionButtons);\n  }\n\n  close(){\n    super.hide();\n    this.destroy();\n  }\n\n  addContent():void{\n    this.taskPanel= new TaskViewPanel();\n    insertElement(this.modalContainer,this.taskPanel.element());\n  }\n\n  setProject(project:CordovaProjectInfo){\n    this.taskPanel.setProject(project);\n  }\n\n}\n"]}