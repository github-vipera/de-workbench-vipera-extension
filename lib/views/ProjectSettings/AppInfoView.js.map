{"version":3,"file":"AppInfoView.js","sourceRoot":"","sources":["../../../src/views/ProjectSettings/AppInfoView.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nimport {\n createText,\n createElement,\n insertElement,\n createGroupButtons,\n createButton,\n createIcon,\n createIconFromPath,\n attachEventFromObject,\n createTextEditor\n} from '../../element/index';\n\nimport { EventEmitter }  from 'events'\nimport { ProjectManager } from '../../DEWorkbench/ProjectManager'\nimport { Cordova, CordovaPlatform, CordovaPlugin } from '../../cordova/Cordova'\nimport { Logger } from '../../logger/Logger'\nimport { UIComponent, UIBaseComponent } from '../../ui-components/UIComponent'\nimport { UIInputFormElement } from '../../ui-components/UIInputFormElement'\nimport { UIButtonGroup, UIButtonConfig, UIButtonGroupMode } from '../../ui-components/UIButtonGroup'\nimport { UINotifications } from '../../ui-components/UINotifications'\n\nexport class AppInfoView extends UIBaseComponent {\n\n  private mainFormElement:HTMLElement;\n  private nameCtrl: UIInputFormElement;\n  private descriptionCtrl: UIInputFormElement;\n  private displayName: UIInputFormElement;\n  private authorCtrl: UIInputFormElement;\n  private licenseCtrl: UIInputFormElement;\n  private versionCtrl: UIInputFormElement;\n  private currentProjectPath:string;\n\n  private actionButtons:UIButtonGroup;\n\n  constructor(){\n    super();\n    this.buildUI();\n  }\n\n  private buildUI(){\n\n    this.currentProjectPath = ProjectManager.getInstance().getCurrentProjectPath();\n\n    this.nameCtrl = new UIInputFormElement().setCaption('Name').setPlaceholder('name (appId)').addChangeListener((evtCtrl:UIInputFormElement)=>{\n      this.onTextValueChanged(evtCtrl);\n    })\n    this.displayName = new UIInputFormElement().setCaption('Display Name').setPlaceholder('display name').addChangeListener((evtCtrl:UIInputFormElement)=>{\n      this.onTextValueChanged(evtCtrl);\n    })\n    this.descriptionCtrl = new UIInputFormElement().setCaption('Description').setPlaceholder('description').addChangeListener((evtCtrl:UIInputFormElement)=>{\n      this.onTextValueChanged(evtCtrl);\n    })\n    this.authorCtrl = new UIInputFormElement().setCaption('Author').setPlaceholder('author').addChangeListener((evtCtrl:UIInputFormElement)=>{\n      this.onTextValueChanged(evtCtrl);\n    })\n    this.licenseCtrl = new UIInputFormElement().setCaption('License').setPlaceholder('license').addChangeListener((evtCtrl:UIInputFormElement)=>{\n      this.onTextValueChanged(evtCtrl);\n    })\n    this.versionCtrl = new UIInputFormElement().setCaption('Version').setWidth(\"150px\").setPlaceholder('0.0.0').addChangeListener((evtCtrl:UIInputFormElement)=>{\n      this.onTextValueChanged(evtCtrl);\n    })\n\n    //Action buttons\n    this.actionButtons = new UIButtonGroup(UIButtonGroupMode.Standard)\n      .addButton(new UIButtonConfig()\n            .setId('revertChanges')\n            .setCaption('Revert Changes')\n            .setClickListener(()=>{\n                this.reload()\n            }))\n      .addButton(new UIButtonConfig()\n            .setId('saveChanges')\n            .setButtonType('success')\n            .setCaption('Save changes')\n            .setClickListener(()=>{\n              this.saveChanges()\n            }))\n    let actionButtonsContainer = createElement('div',{\n      elements: [\n        this.actionButtons.element()\n      ],\n      className: 'de-workbench-appinfo-form-action-buttons'\n    });\n\n    this.mainFormElement = createElement('form',{\n      elements: [\n        this.nameCtrl.element(),\n        this.displayName.element(),\n        this.descriptionCtrl.element(),\n        this.authorCtrl.element(),\n        this.licenseCtrl.element(),\n        this.versionCtrl.element(),\n        actionButtonsContainer\n      ],\n      className: 'de-workbench-appinfo-form general-info-form'\n    });\n\n\n    this.mainFormElement.setAttribute(\"tabindex\", \"-1\")\n    this.mainElement = this.mainFormElement;\n\n    this.reload();\n  }\n\n  private async reload(){\n    ProjectManager.getInstance().cordova.getProjectInfo(this.currentProjectPath, false).then((ret)=>{\n      if (ret==null){\n        //This is not a Cordova Project\n        return;\n      }\n      this.nameCtrl.setValue(ret.name);\n      this.displayName.setValue(ret.displayName);\n      this.descriptionCtrl.setValue(ret.description);\n      this.authorCtrl.setValue(ret.author);\n      this.licenseCtrl.setValue(ret.license);\n      this.versionCtrl.setValue(ret.version);\n    });\n  }\n\n  private async saveChanges(){\n    var currentPackageJson = await ProjectManager.getInstance().cordova.getPackageJson(this.currentProjectPath);\n    currentPackageJson.name = this.nameCtrl.getValue();\n    currentPackageJson.displayName = this.displayName.getValue();\n    currentPackageJson.description = this.descriptionCtrl.getValue();\n    currentPackageJson.author = this.authorCtrl.getValue();\n    currentPackageJson.license = this.licenseCtrl.getValue();\n    currentPackageJson.version = this.versionCtrl.getValue();\n    await ProjectManager.getInstance().cordova.storePackageJson(this.currentProjectPath, currentPackageJson);\n    UINotifications.showInfo(\"Project information changes saved successfully.\")\n  }\n\n  private onTextValueChanged(sourceCtrl:UIInputFormElement){\n    console.log(\"Changed value: \", sourceCtrl.getValue())\n  }\n\n}\n"]}