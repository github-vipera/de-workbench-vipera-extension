{"version":3,"file":"VariantsView.js","sourceRoot":"","sources":["../../../src/views/ProjectSettings/VariantsView.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AAyBX,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAA;AACjE,OAAO,EAAe,eAAe,EAAE,MAAM,iCAAiC,CAAA;AAG9E,MAAM,mBAAqB,SAAQ,eAAe;IAMhD;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEO,OAAO;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,aAAa,EAAE;aACjB,QAAQ,CAAC,gBAAgB,CAAC,CAAC;QAEhD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAE9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAmCG;IAEL,CAAC;CAEF","sourcesContent":["'use babel'\n\n /*!\n  * Dynamic Engine Workbench\n  * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n  * MIT Licensed\n  */\n\nimport {\n createText,\n createElement,\n insertElement,\n createGroupButtons,\n createButton,\n createIcon,\n createIconFromPath,\n attachEventFromObject,\n createTextEditor\n} from '../../element/index';\n\nimport { EventEmitter }  from 'events'\nimport { ProjectManager } from '../../DEWorkbench/ProjectManager'\nimport { Cordova, CordovaPlatform, CordovaPlugin } from '../../cordova/Cordova'\nimport { Logger } from '../../logger/Logger'\nimport { UIPluginsList } from '../../ui-components/UIPluginsList'\nimport { UIStackedView } from '../../ui-components/UIStackedView'\nimport { UIComponent, UIBaseComponent } from '../../ui-components/UIComponent'\nimport { UITreeView, UITreeViewModel, UITreeItem } from '../../ui-components/UITreeView'\n\nexport class VariantsView  extends UIBaseComponent {\n\n  private stackedPage: UIStackedView;\n  private treeModel:UITreeViewModel;\n  private treeView:UITreeView;\n\n  constructor(){\n    super();\n    this.buildUI();\n  }\n\n  private buildUI(){\n    this.stackedPage = new UIStackedView()\n                        .setTitle('Build Variants');\n\n    this.mainElement = this.stackedPage.element();\n\n    /**\n    let root:UITreeItem = {\n      id : 'root',\n      name: 'root',\n      expanded : true,\n      icon: 'icon-file-directory',\n      children: [\n          { id: 'test', name: 'test', icon: 'test-ts-icon'},\n          { id: 'test2', name: 'test 2', icon: 'icon-file-directory',\n            children: [\n              { id: 'test6', name: 'test 6'},\n              { id: 'test7', name: 'test 7'}\n            ]\n          },\n          { id: 'test3', name: 'test 3', icon: 'icon-file-directory',\n            children : [\n              { id: 'test4', name: 'test 4'},\n              { id: 'test5', name: 'test 5'}\n            ]\n          },\n      ]\n    }\n    this.treeModel = {\n      root: root\n    };\n\n\n    let treeView = new UITreeView(this.treeModel);\n    let div = createElement('div', { className: 'test-treeview-container'})\n    insertElement(div, treeView.element())\n    this.stackedPage.setInnerView(div)\n\n    div.style.width = '400px';\n    div.style.height = '400px';\n    div.style.border = 'solid 1px white';\n    **/\n\n  }\n\n}\n"]}