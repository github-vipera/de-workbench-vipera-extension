{"version":3,"file":"InstallNewPluginsView.js","sourceRoot":"","sources":["../../../src/views/ProjectSettings/InstallNewPluginsView.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AAEX;;;;GAIG;AAEF,OAAO,EACL,UAAU,EACV,aAAa,EAQd,MAAM,qBAAqB,CAAC;AAG9B,OAAO,EAAE,cAAc,EAAE,MAAM,kCAAkC,CAAA;AAIjE,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAA;AACjE,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,MAAM,kCAAkC,CAAA;AACtG,OAAO,EAAe,eAAe,EAAE,MAAM,iCAAiC,CAAA;AAC9E,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAA;AAE7D,MAAM,4BAA6B,SAAQ,eAAe;IAMxD;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,IAAI,kBAAkB,GAAG,cAAc,CAAC,WAAW,EAAE,CAAC,qBAAqB,EAAE,CAAC;QAC9E,IAAI,OAAO,GAAW,cAAc,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC;IAE7D,CAAC;IAEO,OAAO;QACb,IAAI,CAAC,oBAAoB,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAEvD,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QAEhF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,gBAAgB,CAAC,YAAY,EAAW,wBAAwB,EAAG,IAAI,CAAC,qBAAqB,CAAC,kCAAkC,CAAC,CAAC,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACpM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,gBAAgB,CAAC,kBAAkB,EAAK,kBAAkB,EAAG,IAAI,CAAC,qBAAqB,CAAC,uCAAuC,CAAC,CAAC,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACnM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,gBAAgB,CAAC,mBAAmB,EAAI,mBAAmB,EAAG,IAAI,CAAC,oBAAoB,CAAE,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAErK,IAAI,CAAC,WAAW,GAAG,IAAI,aAAa,EAAE;aACjB,QAAQ,CAAC,qBAAqB,CAAC;aAC/B,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;aACvC,kBAAkB,CAAC,+CAA+C,CAAC,CAAC;QAEzF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAEhD,CAAC;IAED,qBAAqB,CAAC,KAAY;QAC9B,IAAI,EAAE,GAAG,aAAa,CAAC,KAAK,EAAC;YAC3B,QAAQ,EAAG;gBACT,UAAU,CAAC,KAAK,CAAC;aAClB;SACF,CAAC,CAAC;QACH,EAAE,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,aAAa,CAAC;QAC7C,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC;QAC3B,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC;QAC7B,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAA;QACnC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAA;QAC1B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAA;QACzB,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;CAEF","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\n import {\n   createText,\n   createElement,\n   insertElement,\n   createGroupButtons,\n   createButton,\n   createIcon,\n   createIconFromPath,\n   attachEventFromObject,\n   createTextEditor\n } from '../../element/index';\n\nimport { EventEmitter }  from 'events'\nimport { ProjectManager } from '../../DEWorkbench/ProjectManager'\nimport { Cordova, CordovaPlatform, CordovaPlugin } from '../../cordova/Cordova'\nimport { Logger } from '../../logger/Logger'\nimport { UIPluginsList } from '../../ui-components/UIPluginsList'\nimport { UIStackedView } from '../../ui-components/UIStackedView'\nimport { UITabbedView, UITabbedViewItem, UITabbedViewTabType } from '../../ui-components/UITabbedView'\nimport { UIComponent, UIBaseComponent } from '../../ui-components/UIComponent'\nimport { CommunityPluginsView } from './CommunityPluginsView'\n\nexport class InstallNewPluginsView extends UIBaseComponent {\n\n  private stackedPage: UIStackedView;\n  private tabbedView: UITabbedView;\n  private communityPluginsView: CommunityPluginsView;\n\n  constructor(){\n    super();\n    this.buildUI();\n\n    let currentProjectRoot = ProjectManager.getInstance().getCurrentProjectPath();\n    let cordova:Cordova = ProjectManager.getInstance().cordova;\n\n  }\n\n  private buildUI(){\n    this.communityPluginsView = new CommunityPluginsView();\n\n    this.tabbedView = new UITabbedView().setTabType(UITabbedViewTabType.Horizontal);\n\n    this.tabbedView.addView(new UITabbedViewItem('de_plugins',          'Dynamic Engine Plugins',  this.createSimpleEmptyView('Dynamic Engine Plugins List here')).setTitleClass('icon icon-settings'));\n    this.tabbedView.addView(new UITabbedViewItem('featured_plugins',    'Featured Plugins',  this.createSimpleEmptyView('Third Part Featured Plugins List here')).setTitleClass('icon icon-settings'));\n    this.tabbedView.addView(new UITabbedViewItem('community_plugins',   'Community Plugins',  this.communityPluginsView .element()).setTitleClass('icon icon-settings'));\n\n    this.stackedPage = new UIStackedView()\n                        .setTitle('Install New Plugins')\n                        .setInnerView(this.tabbedView.element())\n                        .addHeaderClassName('de-workbench-stacked-view-header-section-thin');\n\n    this.mainElement = this.stackedPage.element();\n\n  }\n\n  createSimpleEmptyView(color:string):HTMLElement {\n      let el = createElement('div',{\n        elements : [\n          createText(color)\n        ]\n      });\n      el.style[\"background-color\"] = 'transparent';\n      el.style[\"width\"] = \"100%\";\n      el.style[\"heightz\"] = \"100%\";\n      return el;\n  }\n\n  public destroy(){\n    this.communityPluginsView.destroy()\n    this.stackedPage.destroy()\n    this.tabbedView.destroy()\n    super.destroy();\n  }\n\n}\n"]}