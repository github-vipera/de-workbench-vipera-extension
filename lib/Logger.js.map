{"version":3,"file":"Logger.js","sourceRoot":"","sources":["../src/Logger.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AACX,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAO7B,MAAM;IAIG,MAAM,CAAC,SAAS,CAAC,MAAM;QAC5B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEM,MAAM,CAAC,IAAI,CAAC,GAAU;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC;IACH,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,GAAU;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC;IACH,CAAC;IAEM,MAAM,CAAC,IAAI,CAAC,GAAU;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC;IACH,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,GAAU;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC;IACH,CAAC;IAEM,MAAM,CAAC,OAAO,CAAC,GAAU;QAC9B,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,GAAE,WAAW,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;IACnD,CAAC;CAEF;AAGD,MAAM;IAEI,SAAS,CAAC,IAAI;QAKpB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED;QACE,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,OAAa,EAAE,GAAG,cAAqB;IAQ7C,CAAC;IACD,KAAK,CAAC,OAAa,EAAE,GAAG,cAAqB;IAE7C,CAAC;IACD,IAAI,CAAC,OAAa,EAAE,GAAG,cAAqB;QAC1C,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,EAAE,CAAA,CAAC,OAAM,CAAC,OAAO,CAAC,IAAI,QAAQ,IAAK,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAA,CAAC;YAC5D,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAC,cAAc,CAAC,CAAC;QAC5C,CAAC;QAAA,IAAI,CAAA,CAAC;YACJ,GAAG,GAAG,OAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YACjF,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;gBAC/B,GAAG,IAAI,IAAI,GAAG,CAAC,OAAM,CAAC,KAAK,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAE,CAAC;YACzF,CAAC,CAAC,CAAC;QACL,CAAC;QACD,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;IACD,IAAI,CAAC,OAAa,EAAE,GAAG,cAAqB;IAE5C,CAAC;IACD,KAAK,CAAC,OAAa,EAAE,GAAG,cAAqB;IAE7C,CAAC;CACF","sourcesContent":["'use babel'\nconst util = require('util');\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nexport class LoggerService {\n\n  private static logger:any;\n\n  public static setLogger(logger){\n    console.log(\"Set logger\");\n    this.logger = logger;\n  }\n  \n  public static info(msg:string){\n    if (this.logger){\n      this.logger.info(msg);\n    }\n  }\n\n  public static debug(msg:string){\n    if (this.logger){\n      this.logger.debug(msg);\n    }\n  }\n\n  public static warn(msg:string){\n    if (this.logger){\n      this.logger.warn(msg);\n    }\n  }\n\n  public static error(msg:string){\n    if (this.logger){\n      this.logger.error(msg);\n    }\n  }\n\n  public static perfLog(msg:string){\n    console.log(msg + \" [\"+ performance.now() + \"]\");\n  }\n\n}\n\n\nexport class DefaultTransport {\n\n  private formatMsg(args):string{\n    /*if(optionalParams && optionalParams.length >0){\n      return util.format(message,optionalParams);\n    }\n    return message;*/\n    return util.format(args);\n  }\n\n  constructor(){\n    console.log(\"Constructor!!\");\n  }\n\n  trace(message?: any, ...optionalParams: any[]){\n    /*let msg = \" \";\n    if(optionalParams.length > 0){\n       msg = this.formatMsg(message, optionalParams);\n    }else{\n      msg = this.formatMsg(message);\n    }\n    LoggerService.debug(msg);*/\n  }\n  debug(message?: any, ...optionalParams: any[]){\n   \n  }\n  info(message?: any, ...optionalParams: any[]){\n    let msg = \"\";\n    if(typeof(message) == \"string\" &&  message.indexOf('%') >= 0){\n      msg = util.format(message,optionalParams);\n    }else{\n      msg = typeof(message) === \"object\" ? JSON.stringify(message): message.toString();\n      optionalParams.forEach((value) => {\n        msg += \"  \" + (typeof(value) === \"object\" ? JSON.stringify(value) : value.toString() );\n      });\n    }\n    LoggerService.info(msg);\n  }\n  warn(message?: any, ...optionalParams: any[]){\n\n  }\n  error(message?: any, ...optionalParams: any[]){\n\n  }\n}\n"]}