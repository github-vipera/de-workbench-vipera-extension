{"version":3,"file":"DESDKRegistry.js","sourceRoot":"","sources":["../../src/pluginsProvider/DESDKRegistry.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nimport { LoggerService } from '../Logger'\nimport { EventBus } from '../utils/EventBus'\n\nconst registryUrl = require('registry-url')\nconst spawn = require('child_process').spawn;\nconst fs = require('fs')\nconst path = require('path');\nconst _ = require('lodash');\n\nexport class DESDKRegistry {\n\n  private static instance:DESDKRegistry;\n\n  private offlineSDK:boolean = false;\n  private offlineSDKPath:string = \"Not defined\";\n  private isWin:boolean;\n  private spawnRef:any = undefined;\n\n  private constructor() {\n    LoggerService.debug(\"Creating DESDKRegistry...\")\n\n    this.isWin = /^win/.test(process.platform);\n\n    //listening for changes\n    atom.config[\"observe\"]('de-workbench-vipera-extension.UseOfflineSDK', (value)=>{\n      this.notifyChanges()\n    });\n    atom.config[\"observe\"]('de-workbench-vipera-extension.OfflineSDKPath', (value)=>{\n      this.notifyChanges()\n    });\n    atom.config[\"observe\"]('de-workbench-vipera-extension.DefaultNPMRegistry', (value)=>{\n      this.notifyChanges()\n    });\n    atom.config[\"observe\"]('de-workbench-vipera-extension.ViperaNPMRegistry', (value)=>{\n      this.notifyChanges()\n    });\n\n  }\n\n  static getInstance() {\n      if (!DESDKRegistry.instance) {\n          DESDKRegistry.instance = new DESDKRegistry();\n      }\n      return DESDKRegistry.instance;\n  }\n\n  isOfflineSDK():boolean {\n    return  atom.config.get('de-workbench-vipera-extension.UseOfflineSDK')\n  }\n\n  setOfflineSDK(offline:boolean) {\n    atom.config[\"set\"]('de-workbench-vipera-extension.UseOfflineSDK', offline)\n  }\n\n  getOfflineSDKPath():string {\n    return  atom.config.get('de-workbench-vipera-extension.OfflineSDKPath')\n  }\n\n  setOfflineSDKPath(path:string){\n    return atom.config[\"set\"]('de-workbench-vipera-extension.OfflineSDKPath', path)\n  }\n\n  getCurrentNPMRegistry():string {\n    return registryUrl();\n  }\n\n  restoreDefaultNPMRegistry():string {\n    // get from configuration\n    let defaultNPMRegistry = atom.config.get('de-workbench-vipera-extension.DefaultNPMRegistry')\n    this.installNPMRegistry(defaultNPMRegistry)\n    return defaultNPMRegistry;\n  }\n\n  installViperaNPMRegistry():string {\n      // get from configuration\n      let viperaNPMRegistry = atom.config.get('de-workbench-vipera-extension.ViperaNPMRegistry')\n      this.installNPMRegistry(viperaNPMRegistry)\n      return viperaNPMRegistry;\n  }\n\n  notifyChanges(){\n    EventBus.getInstance().publish(EventBus.EVT_CONFIG_CHANGED);\n  }\n\n  public installNPMRegistry(registryURL:string){\n    var cmd = \"npm\";\n    cmd = this.prepareCommand(cmd);\n    this.spawnRef = spawn(cmd, [\"set\", \"registry\", registryURL], {});\n    this.spawnRef.stdout.on('data', (data) => {\n        LoggerService.info(\"[NPM Registry Set] \" + data.toString())\n    });\n\n    this.spawnRef.stderr.on('data', (data) => {\n        LoggerService.error(\"[scriptTools] \" + data.toString())\n    });\n\n    this.spawnRef.on('close', (code) => {\n        LoggerService.info('setNPMRegistry process exited with code ' + code)\n        this.spawnRef = undefined;\n        this.notifyChanges()\n    });\n  }\n\n  prepareCommand(cmd){\n    if (this.isWin){\n      cmd = cmd + \".cmd\";\n    }\n    return cmd;\n  }\n\n  public getLocalSDKPlugins(){\n    let pluginArray= new Array();\n    let sdkLocation = this.getOfflineSDKPath()\n    if (!fs.existsSync(sdkLocation)) {\n      return pluginArray;\n    }\n    let pluginDirectories = this.getDirectories(sdkLocation);\n    _.forEach(pluginDirectories,(singlePath) => {\n      let pluginInfo = this.loadLocalPluginInfo(path.join(sdkLocation, singlePath));\n      if(!pluginInfo){\n        console.error(\"Invalid plugin dir:\",singlePath);\n        return;\n      }\n      pluginArray.push(pluginInfo)\n    });\n    return pluginArray;\n  }\n\n  private getDirectories (srcpath) {\n    return fs.readdirSync(srcpath)\n      .filter(file => fs.lstatSync(path.join(srcpath, file)).isDirectory())\n  }\n\n  private loadLocalPluginInfo(dir){\n    var completePath = path.join(dir, 'package.json');\n    if(!fs.existsSync(completePath)){\n      return undefined;\n    }\n    var packageJSON = JSON.parse(fs.readFileSync(completePath, 'utf8'));\n    if(!packageJSON.cordova){\n      return undefined;\n    }\n    console.log(\"Found plugin: \", packageJSON)\n    return {\n      \"id\": packageJSON.name,\n      \"name\": packageJSON.name,\n      \"url\": packageJSON.repository != undefined ? packageJSON.repository.url : \"\",\n      \"repoUrl\": packageJSON.repository != undefined ? packageJSON.repository.url : \"\",\n      \"version\": packageJSON.version,\n      \"description\": packageJSON.description,\n      \"lastUpdate\": \"\",\n      \"localPath\": dir,\n      installed: false,\n      repository: \"local\",\n      repositoryType: \"private\",\n      license: packageJSON.license,\n      author: packageJSON.author,\n      platforms: this.readAvailablePlatforms(packageJSON)\n      //homepage: \"https://www.vipera.com\",\n      //lastUpdateTime: \"\"+ new Date(),\n      //rating: 10,\n      //platforms: [this.getPlatformDesc('ios'), this.getPlatformDesc('android')]\n    };\n  }\n\n\n  private readAvailablePlatforms(jsonRaw:any):Array<string>{\n    if (!jsonRaw.keywords){\n      return [];\n    }\n    let ret = new Array();\n    if (this.isPlatformSupported(jsonRaw,'ios')){\n      ret.push({ name:\"ios\", displayName: \"iOS\" })\n    }\n    if (this.isPlatformSupported(jsonRaw,'android')){\n      ret.push({ name:\"android\", displayName: \"Android\" })\n    }\n    if (this.isPlatformSupported(jsonRaw,'browser')){\n      ret.push({ name:\"browser\", displayName: \"Browser\" })\n    }\n    return ret\n  }\n\n  private isPlatformSupported(jsonRaw:any, platform:string):boolean {\n    if (_.indexOf(jsonRaw.keywords, 'cordova-' + platform )>-1){\n      return true;\n    }\n    else if (_.indexOf(jsonRaw.keywords, platform )>-1){\n      return true;\n    }\n    else return false;\n  }\n\n}\n"]}