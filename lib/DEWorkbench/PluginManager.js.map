{"version":3,"file":"PluginManager.js","sourceRoot":"","sources":["../../src/DEWorkbench/PluginManager.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AAEX;;;;GAIG;AACH,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAA;AA4BlD,MAAM;IAIJ;QACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAEM,cAAc,CAAC,MAAa;QAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAEzB,mBAAmB;QACnB,MAAM,CAAC,cAAc,EAAE,CAAC;QAExB,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,0BAA0B,EAAE,MAAM,CAAC,CAAA;IAC/E,CAAC;CAGF","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\nimport { EventBus } from '../DEWorkbench/EventBus'\nimport { CordovaPlugin } from '../cordova/Cordova'\n\nexport interface Service {\n}\n\nexport interface CordovaPluginsProviderService extends Service {\n  getCordovaPlugins():Array<CordovaPlugin>;\n  getProviderName():string;\n  getExtendedUI():HTMLElement;\n}\n\nexport interface Plugin {\n name: string\n options: any\n\n onRegistration()\n providedServices():Array<Service>;\n\n}\n\nexport interface UIProvider {\n}\n\nexport interface UIPluginsProvider {\n    domElement: HTMLElement\n}\n\nexport class PluginManager {\n\n  public plugins: Array<Plugin>;\n\n  constructor(){\n    this.plugins = [];\n  }\n\n  public registerPlugin(plugin:Plugin){\n      this.plugins.push(plugin)\n\n      // lifecycle method\n      plugin.onRegistration();\n\n      EventBus.getInstance().publish(EventBus.EVT_WORKBENCH_PLUGIN_ADDED, plugin)\n  }\n\n\n}\n"]}