{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nconst { CompositeDisposable } = require('atom')\ndeclare function require(moduleName: string): any;\n\nimport { LoggerService } from './Logger'\nimport { DEPluginsProviderFactory } from './pluginsProvider/DEPluginsProviderFactory'\nimport { WorkbenchServices } from './WorkbenchServices'\n//import { MotifMockServerProvider } from './MOTIFMockServer/MOTIFMockServer'\nimport { DEUtils } from './utils/DEUtils'\nimport { UINotifications } from './ui-components/UINotifications'\n\n\nexport default {\n\n  subcriptions: null,\n\n  config:{\n      ViperaNPMRegistry: {\n        title: 'Vipera NPM Registry',\n        description: 'Vipera NPM Registry',\n        type: 'string',\n        default: \"https://npm-proxy.fury.io/Mr43aEGkxz47vyf7VZ_y/vipera-npm-registry/\"\n      }\n  },\n\n  activate (state: any) {\n    console.log(\"DEWBEXT activated.\");\n    this.deferredActivation();\n  },\n\n  deferredActivation(){\n    LoggerService.perfLog(\"DEWBEXT deferredActivation.\");\n    \n    /* TIME CONSUMING\n    require('atom-package-deps').install('de-wb-vipera-extension', false).then(function(res){\n      console.log(\"Dep packages installed.\");\n    })\n    */\n\n    // add commands\n    let commands = atom.commands.add('atom-workspace', {\n        'dewb-ext-menu-view-:install-de-cli': ()=> this.installDECli(),\n        'dewb-ext-menu-view-:check-de-cli': ()=> this.checkForDECli()\n      });\n    this.subscriptions = new CompositeDisposable();\n    // add commands subs\n    this.subscriptions.add(commands);\n    \n    LoggerService.perfLog(\"DEWBEXT deferredActivation.END\");\n  },\n\n  deactivate () {\n      console.log('DEWBEXT deactivated.');\n  },\n\n  fooAction(){\n    alert('Foo action')\n  },\n\n  consumeCordovaPluginsProvider: function (dewebCordovaPluginsProviderManager) {\n    LoggerService.perfLog(\"Consuming DE WB plugin manager...\");\n    WorkbenchServices.CordovaPluginsProviderManager = dewebCordovaPluginsProviderManager;\n    DEPluginsProviderFactory.getInstance();\n    WorkbenchServices.CordovaPluginsProviderManager.registerProviderFactory(DEPluginsProviderFactory.getInstance());\n    LoggerService.perfLog(\"Consuming DE WB plugin manager...END\");\n  },\n\n  \n  consumeLogger:function(logger){\n    LoggerService.perfLog(\"Consuming DE WB Logger!!\");\n    WorkbenchServices.Logger = logger;\n    LoggerService.setLogger(logger);\n    LoggerService.perfLog(\"Consuming DE WB Logger END!\");\n  },\n\n  consumeProjectManager:function(projectManager){\n    LoggerService.perfLog(\"Consuming DE WB Project Manager!!\");\n    WorkbenchServices.ProjectManager = projectManager;\n    LoggerService.perfLog(\"Consuming DE WB Project Manager END!\");\n  },\n\n  consumeEvents:function(eventBus){\n    LoggerService.perfLog(\"Consuming DE WB Event Bus!!\");\n    WorkbenchServices.Events = eventBus;\n    LoggerService.perfLog(\"Consuming DE WB Event Bus END!\");\n  },\n\n  consumeServerManager:function(serverManager){\n    LoggerService.perfLog(\"Consuming DE WB Server Manager!!\");\n    WorkbenchServices.ServerManager = serverManager;\n    setTimeout(()=>{\n      LoggerService.perfLog(\"WB Server Manager registerProvider...\");\n      let xx = require('./MOTIFMockServer/MOTIFMockServer').MotifMockServerProvider;\n      WorkbenchServices.ServerManager.registerProvider(new xx())\n      LoggerService.perfLog(\"WB Server Manager registerProvider...END\");\n    }, 1);\n    //WorkbenchServices.ServerManager.registerProvider(new MotifMockServerProvider)\n    LoggerService.perfLog(\"Consuming DE WB Server Manager END!\");\n  },\n\n  consumeExecutorService:function(executorService){\n    LoggerService.perfLog(\"Consuming DE WB Executor Service!!\");\n    WorkbenchServices.ExecutorService = executorService;\n    LoggerService.perfLog(\"Consuming DE WB Executor Service END!\");\n\n    if (this.needDECLICheck()){\n      this.checkForDECli();\n    }\n\n  },\n\n  async installDECli(){\n    let installRunningNotification = UINotifications.showInfo(\"Installing DE CLI...\", { dismissable: true })\n    let ok = await DEUtils.installDECli();\n    if (ok){\n      installRunningNotification.dismiss()\n      UINotifications.showSuccess(\"DE CLI installed successfully.\")\n    } else {\n      installRunningNotification.dismiss()\n      UINotifications.showError(\"Error installing the DE CLI. See the log for more details.\")\n    }\n  },\n\n  async checkForDECli(){\n    let deCliOK = await DEUtils.checkForDECli();\n    atom.config[\"set\"]('de-workbench-vipera-extension.DECCLICheck', false);\n    if (!deCliOK){\n      let notification = UINotifications.showInfo(\"DE CLI Not Installed.\", {\n        dismissable: true,\n        buttons: [\n          {\n            text: 'Do Install',\n            onDidClick: ()=>{\n              notification.dismiss();\n              this.installDECli();\n            }\n          },\n          {\n            text: 'Cancel',\n            onDidClick: ()=>{\n              notification.dismiss();\n            }\n          }\n        ],\n        detail: \"La DE CLI non sembra essere installata. Vuoi procedere ora con l'installazione?\"\n      })\n    }\n  },\n\n  needDECLICheck():boolean {\n    return  atom.config.get('de-workbench-vipera-extension.DECCLICheck')\n  }\n  \n}\n"]}