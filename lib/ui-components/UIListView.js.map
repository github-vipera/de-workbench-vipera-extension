{"version":3,"file":"UIListView.js","sourceRoot":"","sources":["../../src/ui-components/UIListView.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n import {\n   createText,\n   createElement,\n   insertElement,\n   createGroupButtons,\n   createButton,\n   createIcon,\n   createIconFromPath,\n   attachEventFromObject,\n   createTextEditor\n } from '../element/index';\n\nimport { UIComponent, UIBaseComponent } from './UIComponent'\n\nexport interface UIListViewModel {\n    hasHeader():boolean;\n    getRowCount():number;\n    getColCount():number;\n    getElementAt?(row:number, col:number):HTMLElement;\n    getValueAt(row:number, col:number):any;\n    getClassNameAt(row:number, col:number):string;\n    getColumnName(col:number):string;\n    getClassName():string;\n}\n\nexport class UIListView extends UIBaseComponent {\n\n  private model: UIListViewModel;\n  private tableElement: HTMLElement;\n\n  constructor(model:UIListViewModel){\n    super();\n    if (model){\n      this.setModel(model);\n    }\n  }\n\n  public setModel(model:UIListViewModel){\n    this.model = model;\n    this.buildUI();\n  }\n\n  protected buildUI(){\n    let listViewClass = \"de-workbench-listview\";\n    let customClass = this.model.getClassName();\n    if (customClass){\n      listViewClass += \" \" + customClass;\n    }\n\n    this.tableElement = this.createTableElement();\n\n    this.mainElement =  createElement('div', {\n        elements: [\n          this.tableElement\n              ],\n        className:listViewClass\n    })\n    this.mainElement.id = this.uiComponentId;\n\n  }\n\n  protected createTableElement():HTMLElement {\n    let table = createElement('table',{\n      className: \"de-workbench-listview-tb\"\n    });\n\n    // create header if required\n    if (this.model.hasHeader()){\n      let tbRow = createElement('tr');\n      for (var c=0;c<this.model.getColCount();c++){\n        let tbCol = createElement('th', {\n          elements: [\n            createText(this.model.getColumnName(c))\n          ]\n        });\n        insertElement(tbRow, tbCol);\n      }\n      insertElement(table, tbRow);\n    }\n\n    // create rows\n    for (var r=0;r<this.model.getRowCount();r++){\n      let tbRow = createElement('tr');\n      for (var c=0;c<this.model.getColCount();c++){\n        let innerElement = undefined;\n        if (typeof this.model.getElementAt == \"function\"){\n          innerElement = this.model.getElementAt(r,c);\n        } else {\n          innerElement = createText(this.model.getValueAt(r,c))\n        }\n        let tbCol = createElement('td', {\n          elements: [\n            innerElement\n          ]\n        });\n        insertElement(tbRow, tbCol);\n      }\n      insertElement(table, tbRow);\n    }\n\n    return table;\n  }\n\n  public modelChanged(){\n    let oldTable = this.tableElement;\n    this.tableElement = this.createTableElement();\n    this.mainElement.replaceChild(this.tableElement, oldTable);\n  }\n\n\n}\n"]}