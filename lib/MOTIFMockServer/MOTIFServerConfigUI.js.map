{"version":3,"file":"MOTIFServerConfigUI.js","sourceRoot":"","sources":["../../src/MOTIFMockServer/MOTIFServerConfigUI.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AAQV,OAAO,EAEL,aAAa,EAQd,MAAM,kBAAkB,CAAC;AAG3B,OAAO,EAAE,YAAY,EAAE,MAAO,QAAQ,CAAA;AAEtC,OAAO,EAAE,OAAO,EAAE,MAAM,0BAA0B,CAAA;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAA;AAEpD,MAAM;IAaJ;QACE,IAAI,CAAC,MAAM,EAAE,CAAA;IACf,CAAC;IAES,MAAM;QACd,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAEjC,IAAI,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC;YAC/B,OAAO,EAAE,aAAa;YACtB,WAAW,EAAG,aAAa;SAC5B,CAAC,CAAA;QAEF,IAAI,CAAC,iBAAiB,GAAG,IAAI,OAAO,CAAC;YACnC,OAAO,EAAE,kBAAkB;YAC3B,WAAW,EAAG,kBAAkB;YAChC,SAAS,EAAE,MAAM;YACjB,OAAO,EAAC,KAAK;SACd,CAAC,CAAA;QAEF,IAAI,CAAC,iBAAiB,GAAG,IAAI,OAAO,CAAC;YACnC,OAAO,EAAE,kBAAkB;YAC3B,WAAW,EAAC,kCAAkC;YAC9C,OAAO,EAAC,IAAI;SACb,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,GAAG,IAAI,OAAO,CAAC;YACtC,OAAO,EAAE,qBAAqB;YAC9B,WAAW,EAAG,qBAAqB;YACnC,SAAS,EAAE,MAAM;YACjB,OAAO,EAAC,KAAK;SACd,CAAC,CAAA;QAEF,IAAI,CAAC,cAAc,GAAG,IAAI,OAAO,CAAC;YAChC,OAAO,EAAE,qBAAqB;YAC9B,WAAW,EAAG,sBAAsB;YACpC,SAAS,EAAC,QAAQ;YAClB,OAAO,EAAC,KAAK;SACd,CAAC,CAAA;QAEF,IAAI,CAAC,WAAW,GAAG,IAAI,QAAQ,CAAC;YAC9B,OAAO,EAAE,UAAU;SACpB,CAAC,CAAA;QAEF,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,EAAE;YACrC,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,GAAG,IAAI,QAAQ,CAAC;YACpC,OAAO,EAAE,aAAa;SACvB,CAAC,CAAA;QAEF,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,KAAK,EAAC;YACrC,QAAQ,EAAC,CAAE,IAAI,CAAC,aAAa,CAAC,OAAO;gBACnC,IAAI,CAAC,iBAAiB,CAAC,OAAO;gBAC9B,IAAI,CAAC,iBAAiB,CAAC,OAAO;gBAC9B,IAAI,CAAC,WAAW,CAAC,OAAO;gBACxB,IAAI,CAAC,iBAAiB,CAAC,OAAO;gBAC9B,IAAI,CAAC,oBAAoB,CAAC,OAAO;gBACjC,IAAI,CAAC,cAAc,CAAC,OAAO;aAC5B;SACF,CAAC,CAAA;IAGJ,CAAC;IAES,iBAAiB;QACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAA;IAClD,CAAC;IAEM,QAAQ,CAAC,MAAwB;QACtC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAA;QACzC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,IAAI,EAAE,CAAA;QACjD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,IAAI,EAAE,CAAA;QACvD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,IAAI,EAAE,CAAA;QAC3C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAA;QACnC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC;IAC1C,CAAC;IAED,gBAAgB,CAAC,KAAY,EAAE,QAAQ;QACrC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;IAC1C,CAAC;IAED,mBAAmB,CAAC,KAAY,EAAE,QAAQ;QACxC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;IAC7C,CAAC;IAED,gBAAgB;QACd,IAAI,GAAG,GAAqB;YAC1B,IAAI,EAAE,IAAI,CAAC,UAAU;YACrB,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAA;QACD,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAED,IAAW,UAAU;QACnB,IAAI,CAAC;YACH,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QAC3C,CAAC;QAAC,KAAK,CAAA,CAAC,GAAG,CAAC,CAAA,CAAC;YACX,KAAK,CAAC,oCAAoC,CAAC,CAAA;QAC7C,CAAC;IACH,CAAC;IAED,IAAW,cAAc;QACvB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;IACtC,CAAC;IAED,IAAW,iBAAiB;QAC1B,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;IACzC,CAAC;IAED,IAAW,WAAW;QACpB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;IACnC,CAAC;IAED,IAAW,aAAa;QACtB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAChC,CAAC;IAED,IAAW,UAAU;QACnB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;IACtC,CAAC;IAED,IAAW,SAAS;QAClB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;IACtC,CAAC;IAED,IAAW,UAAU,CAAC,KAAY;QAChC,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,GAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,IAAW,cAAc,CAAC,KAAY;QACpC,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;IACvC,CAAC;IAED,IAAW,iBAAiB,CAAC,KAAY;QACvC,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,KAAK,CAAC;IAC1C,CAAC;IAED,IAAW,WAAW,CAAC,KAAY;QACjC,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,KAAK,CAAC;IACpC,CAAC;IAED,IAAW,aAAa,CAAC,KAAa;QACpC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,IAAW,UAAU,CAAC,KAAa;QACjC,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;IACvC,CAAC;IAED,IAAW,SAAS,CAAC,KAAY;QAC/B,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;IACvC,CAAC;IAGO,YAAY;QAClB,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA,CAAC;YACtB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC5C,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC;QAAA,IAAI,CAAA,CAAC;YACJ,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;CAEF","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\n import {\n   createText,\n   createElement,\n   insertElement,\n   createGroupButtons,\n   createButton,\n   createIcon,\n   createIconFromPath,\n   attachEventFromObject,\n   createTextEditor\n } from '../element/index';\n\nimport { LoggerService } from '../Logger'\nimport { EventEmitter }  from 'events'\nimport { MotifServerConfig, LoggerTransport } from './MOTIFMockServerCommons'\nimport { UIInput } from '../ui-components/UIInput'\nimport { UIToggle } from '../ui-components/UIToggle'\n\nexport class MOTIFServerConfigUI {\n\n  events:EventEmitter;\n  public mainElement:HTMLElement;\n\n  protected txtServerPort:UIInput;\n  protected txtMockModulePath:UIInput;\n  protected txtMotifServerUrl:UIInput;\n  protected txtLibraryLoaderPath:UIInput;\n  protected txtLocalDbPath:UIInput;\n  protected mockEnabled:UIToggle;\n  protected liveReloadEnabled:UIToggle;\n\n  constructor(){\n    this.initUI()\n  }\n\n  protected initUI(){\n    this.events = new EventEmitter();\n\n    this.txtServerPort = new UIInput({\n      caption: \"Server Port\",\n      placeholder : \"Server Port\"\n    })\n\n    this.txtMockModulePath = new UIInput({\n      caption: \"Mock Module File\",\n      placeholder : \"Mock Module File\",\n      browseFor: \"file\",\n      visible:false\n    })\n\n    this.txtMotifServerUrl = new UIInput({\n      caption: \"Motif Server Url\",\n      placeholder:\"Ex: 'http://localhost:8080/json'\",\n      visible:true\n    });\n\n    this.txtLibraryLoaderPath = new UIInput({\n      caption: \"Library Loader File\",\n      placeholder : \"Library Loader File\",\n      browseFor: \"file\",\n      visible:false\n    })\n\n    this.txtLocalDbPath = new UIInput({\n      caption: \"Local Database Path\",\n      placeholder : \"Local Database  Path\",\n      browseFor:\"folder\",\n      visible:false\n    })\n\n    this.mockEnabled = new UIToggle({\n      caption: 'Use mock'\n    })\n\n    this.mockEnabled.onDidValueChange(() => {\n      this.updateMockUI();\n    });\n\n    this.liveReloadEnabled = new UIToggle({\n      caption: 'Live reload'\n    })\n\n    this.mainElement = createElement('div',{\n      elements:[ this.txtServerPort.element,\n        this.txtMockModulePath.element,\n        this.txtMotifServerUrl.element,\n        this.mockEnabled.element,\n        this.liveReloadEnabled.element,\n        this.txtLibraryLoaderPath.element,\n        this.txtLocalDbPath.element\n      ]\n    })\n\n\n  }\n\n  protected fireConfigChanged(){\n    this.events.emit(\"didConfigurationChange\", this)\n  }\n\n  public updateUI(config:MotifServerConfig){\n    this.portNumber = config.port || -1;\n    this.isMockEnabled = config.isMockEnabled\n    this.mockModulePath = config.mockModulePath || \"\"\n    this.libraryLoaderPath = config.libraryLoaderPath || \"\"\n    this.localDBPath = config.localDBPath || \"\"\n    this.liveReload = config.liveReload\n    this.serverUrl = config.serverUrl || \"\";\n  }\n\n  addEventListener(event:string, listener) {\n    this.events.addListener(event, listener)\n  }\n\n  removeEventListener(event:string, listener){\n    this.events.removeListener(event, listener)\n  }\n\n  getConfiguration():MotifServerConfig{\n    let ret:MotifServerConfig = {\n      port: this.portNumber,\n      isMockEnabled: this.isMockEnabled,\n      mockModulePath: this.mockModulePath,\n      libraryLoaderPath: this.libraryLoaderPath,\n      localDBPath: this.localDBPath,\n      liveReload: this.liveReload,\n      serverUrl: this.serverUrl\n    }\n    return ret;\n  }\n\n  public get portNumber():number {\n    try {\n      return parseInt(this.txtServerPort.value)\n    } catch(err){\n      alert(\"Invalid server port number defined\")\n    }\n  }\n\n  public get mockModulePath():string {\n    return this.txtMockModulePath.value;\n  }\n\n  public get libraryLoaderPath():string {\n    return this.txtLibraryLoaderPath.value;\n  }\n\n  public get localDBPath():string {\n    return this.txtLocalDbPath.value;\n  }\n\n  public get isMockEnabled():boolean {\n    return this.mockEnabled.value;\n  }\n\n  public get liveReload():boolean {\n    return this.liveReloadEnabled.value;\n  }\n\n  public get serverUrl():string {\n    return this.txtMotifServerUrl.value;\n  }\n\n  public set portNumber(value:number) {\n    this.txtServerPort.value = \"\"+(value > 0 ? value : \"\");\n  }\n\n  public set mockModulePath(value:string) {\n    this.txtMockModulePath.value = value;\n  }\n\n  public set libraryLoaderPath(value:string) {\n    this.txtLibraryLoaderPath.value = value;\n  }\n\n  public set localDBPath(value:string) {\n    this.txtLocalDbPath.value = value;\n  }\n\n  public set isMockEnabled(value:boolean) {\n    this.mockEnabled.value = value;\n    this.updateMockUI();\n  }\n\n  public set liveReload(value:boolean) {\n    this.liveReloadEnabled.value = value;\n  }\n\n  public set serverUrl(value:string){\n    this.txtMotifServerUrl.value = value;\n  }\n\n\n  private updateMockUI(){\n    if(!this.isMockEnabled){\n      this.txtMockModulePath.setVisible(false);\n      this.txtLocalDbPath.setVisible(false);\n      this.txtLibraryLoaderPath.setVisible(false);\n      this.txtMotifServerUrl.setVisible(true);\n    }else{\n      this.txtMockModulePath.setVisible(true);\n      this.txtLocalDbPath.setVisible(true);\n      this.txtLibraryLoaderPath.setVisible(true);\n      this.txtMotifServerUrl.setVisible(false);\n    }\n  }\n\n}\n"]}