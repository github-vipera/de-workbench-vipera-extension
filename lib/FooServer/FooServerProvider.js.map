{"version":3,"file":"FooServerProvider.js","sourceRoot":"","sources":["../../src/FooServer/FooServerProvider.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\n import {\n   createText,\n   createElement,\n   insertElement,\n   createGroupButtons,\n   createButton,\n   createIcon,\n   createIconFromPath,\n   attachEventFromObject,\n   createTextEditor\n } from '../element/index';\n\nimport { LoggerService } from '../Logger'\nimport { DEWBResourceManager } from '../utils/DEWBResourceManager'\nimport { WorkbenchServices } from '../WorkbenchServices'\nimport { EventEmitter }  from 'events'\n\n\nexport enum ServerStatus {\n  Stopped = 0,\n  Starting,\n  Running,\n  Stopping\n}\n\nexport interface ServerInstance {\n  start();\n  stop();\n  status:ServerStatus;\n  configure(configuration:any);\n  addEventListener(event:string, listener);\n  removeEventListener(event:string, listener);\n  getConfigurator(configuration:any):ServerInstanceConfigurator;\n}\n\nexport interface ServerInstanceConfigurator {\n    getConfiguration():any;\n    addEventListener(event:string, listener);\n    removeEventListener(event:string, listener);\n    getConfigurationPane():HTMLElement;\n    revertChanges();\n    applyConfiguration(configuration:any);\n}\n\n\nexport interface ServerProvider {\n  createInstance(configuration:any):ServerInstance;\n  destroyInstance(instance:ServerInstance);\n  getProviderName():string;\n}\n\n\nexport class FakeMOTIFServerProvider implements ServerProvider {\n\n  constructor(){\n  }\n\n  createInstance(configuration:any):ServerInstance {\n    return new FakeMotifServer();\n  }\n\n  getProviderName():string {\n      return \"(Fake)MOTIF Vipera Server\"\n  }\n\n  destroyInstance(instance:ServerInstance) {\n    //TODO!!\n  }\n\n}\n\nclass FakeMotifServer implements ServerInstance {\n\n  status:ServerStatus=ServerStatus.Stopped;\n  protected events:EventEmitter;\n  protected configurator: FooConfigurator;\n\n  constructor(){\n    this.events = new EventEmitter();\n    this.configurator = new FooConfigurator();\n  }\n\n  start(){\n    console.log(\"FOOSERVER start called\")\n    this.status = ServerStatus.Starting\n    this.events.emit('onDidStatusChange', this)\n    setTimeout(()=>{ this.doStarted() }, 3000);\n  }\n\n  stop(){\n    console.log(\"FOOSERVER stop called\")\n    this.status = ServerStatus.Stopping\n    this.events.emit('onDidStatusChange', this)\n    setTimeout(()=>{ this.doStopped() }, 3000);\n  }\n\n  protected doStarted(){\n    this.status = ServerStatus.Running\n    this.events.emit('onDidStatusChange', this)\n  }\n\n  protected doStopped(){\n    this.status = ServerStatus.Stopped\n    this.events.emit('onDidStatusChange', this)\n  }\n\n  configure(){\n    //NOP\n  }\n\n  addEventListener(event:string, listener){\n    this.events.addListener(event, listener)\n  }\n\n  removeEventListener(event:string, listener){\n    this.events.removeListener(event, listener)\n  }\n\n  getConfigurator(configuration:any):FooConfigurator {\n    return this.configurator;\n  }\n\n\n\n\n\n}\n\nclass FooConfigurator implements ServerInstanceConfigurator {\n\n  events:EventEmitter;\n  currentConfig:any;\n  inputA:HTMLElement;\n  inputB:HTMLElement;\n  mainElement:HTMLElement;\n\n  constructor(){\n    this.events = new EventEmitter();\n  }\n\n  protected initUI(){\n    this.inputA = createElement('input',{\n      className: 'input-text native-key-bindings'\n    })\n    this.inputA.setAttribute('type', 'text')\n    this.inputA.setAttribute('placeholder', 'Server URL')\n    this.inputA.addEventListener('keydown',(evt)=>{\n      this.fireConfigChanged()\n    })\n\n    let spacer = createElement('div',{\n    })\n    spacer.style.height = \"10px\";\n\n    this.inputB = createElement('input',{\n      className: 'input-text native-key-bindings'\n    })\n    this.inputB.setAttribute('type', 'text')\n    this.inputB.setAttribute('placeholder', 'Configuration file')\n    this.inputB.addEventListener('keydown',(evt)=>{\n      this.fireConfigChanged()\n    })\n\n    this.mainElement  = createElement('div',{\n      elements:[ this.inputA, spacer, this.inputB ]\n    })\n\n    this.updateUI();\n  }\n\n  addEventListener(event:string, listener) {\n    this.events.addListener(event, listener)\n  }\n\n  removeEventListener(event:string, listener){\n    this.events.removeListener(event, listener)\n  }\n\n  applyConfiguration(configuration:any){\n    this.currentConfig = configuration;\n    if (this.mainElement){\n      this.updateUI();\n    }\n  }\n\n  getConfigurationPane():HTMLElement {\n    if (!this.mainElement){\n      this.initUI();\n    }\n    return this.mainElement;\n  }\n\n  protected updateUI(){\n    if (this.currentConfig.url){\n      this.inputA[\"value\"] = this.currentConfig.url\n    }\n    if (this.currentConfig.configPath){\n      this.inputB[\"value\"] = this.currentConfig.configPath\n    }\n  }\n\n  protected fireConfigChanged(){\n    this.events.emit(\"didConfigurationChange\", this)\n  }\n\n  revertChanges(){\n    this.updateUI()\n  }\n\n  getConfiguration():any {\n    return { url:this.inputA[\"value\"], configPath:this.inputB[\"value\"]}\n  }\n\n\n}\n"]}